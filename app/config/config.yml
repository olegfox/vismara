imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: @SiteMainBundle/Resources/config/admin.yml }
framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        cookie_lifetime: 31536000
    fragments:       ~
    http_method_override: true
    serializer:
        enabled: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form:
        resources:
            # other files
            - 'SonataMediaBundle:Form:media_widgets.html.twig'

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ SiteMainBundle ]
    read_from: %kernel.root_dir%/../www
    write_to:  %kernel.root_dir%/../www
    #java: /usr/bin/java
    filters:
        jpegoptim:
            bin: "%kernel.root_dir%/Resources/java/jpegoptim"
            apply_to: "\.jpe?g$"
        cssrewrite:
        yui_css:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.8.jar"
        yui_js:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.8.jar"
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        options:
            1002:  "SET NAMES 'UTF8'"
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: %kernel.debug%
#        auto_mapping: true
        entity_managers:
            default:
                mappings:
                    ApplicationSonataMediaBundle: ~
                    SonataMediaBundle: ~
                    ApplicationSonataUserBundle: ~
                    SonataUserBundle: ~
                    FOSUserBundle: ~
                    SiteMainBundle: {type: annotation, dir: Entity/ }

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }
    port:       465
    encryption: ssl

#Sonata Configuration
fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User

    group:
        group_class: Application\Sonata\UserBundle\Entity\Group

    profile:  # Authentication Form
        form:
            type:               fos_user_profile
            handler:            fos_user.profile.form.handler.default
            name:               fos_user_profile_form
            validation_groups:  [Authentication] # Please note : this is not the default value
sonata_user:
    security_acl:     false
    class:
        user:         Application\Sonata\UserBundle\Entity\User
        group:        Application\Sonata\UserBundle\Entity\Group

    profile:  # Profile Form (firstname, lastname, etc ...)
        form:
            type:               sonata_user_profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile]
sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:   [admin]
        # Your other blocks
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text:
        sonata.block.service.action:
        sonata.block.service.rss:

sonata_admin:
    title:      VISMARA
    title_logo: /sitemain/images/logo-admin.png
    templates:
            dashboard: SonataAdminBundle:Core:dashboard.html.twig
            layout:  SonataAdminBundle::layout.html.twig
    security:
        handler: sonata.admin.security.handler.role
        acl_user_manager: fos_user.user_manager # Name of the user manager service used to retrieve ACL users

    options:
        html5_validate: false # does not use html5 validation
        confirm_exit:   false # disable confirmation when quitting with unsaved changes
        pager_links:    5     # pager max links to display

    # set to true to persist filter settings per admin module in the user's session
    persist_filters: false

    dashboard:
      groups:
        Site_menu:
          label: Menu
          items: [sonata.admin.menu]
        Site_categoryGallery:
          label: Category Products
          items: [sonata.admin.categoryGallery]
        Site_styleGallery:
          label: Styles Products
          items: [sonata.admin.styleGallery]
        Site_gallery:
          label: Collections
          items: [sonata.admin.gallery]
        Site_product:
          label: Products
          items: [sonata.admin.product]
        Site_slider:
          label: Slider
          items: [sonata.admin.slider]
        Site_video:
          label: Video
          items: [sonata.admin.video]
#        Site_bottom_image:
#          label: Нижняя картинка
#          items: [sonata.admin.bottomImage]
        Site_map:
          label: Map
          items: [sonata.admin.map]
#        Site_news:
#          label: Новости
#          items: [sonata.admin.news]
        Site_zone:
          label: Zone
          items: [sonata.admin.zone]
        Site_catalogs:
          label: Catalogs
          items: [sonata.admin.catalogs]
        Site_newsGallery:
          label: News
          items: [sonata.admin.newsGallery]
        Site_newsGalleryIt:
          label: NewsIt
          items: [sonata.admin.newsGalleryIt]
        Site_newsGalleryRu:
          label: NewsRu
          items: [sonata.admin.newsGalleryRu]
        Site_newsGalleryCn:
          label: NewsCn
          items: [sonata.admin.newsGalleryCn]
        Site_clients:
          label: Clients
          items: [sonata.admin.client]
        Site_colorGroup:
          label: Color Group
          items: [sonata.admin.colorGroup]
        Site_color:
          label: Color
          items: [sonata.admin.color]
#        Site_feedbackCatalog:
#          label: EmailFeedbackCatalog
#          items: [sonata.admin.feedbackCatalog]
sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.


        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig


        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

sonata_media:
    # if you don't use default namespace configuration
    #class:
    #    media: MyVendor\MediaBundle\Entity\Media
    #    gallery: MyVendor\MediaBundle\Entity\Gallery
    #    gallery_has_media: MyVendor\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.vimeo
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                small: { width: 136 , height: 158, quality: 50}
                news: { width: 350 , height: 245, quality: 50}
                big:   { width: 1000 , quality: 50}
                preview:   { width: 280, height: 280, quality: 50}

    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  %kernel.root_dir%/../www/uploads/media
            create:     false
    providers:
        image:
            resizer: sonata.media.resizer.simple

services:
   get_set_method_normalizer:
      class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
      tags:
         - { name: serializer.normalizer }
   serializer.method:
       class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
   serializer.encoder.json:
       class: Symfony\Component\Serializer\Encoder\JsonEncoder
   serializer:
       class: Symfony\Component\Serializer\Serializer
       arguments:
           - [@serializer.method]
           - {json: @serializer.encoder.json }

gregwar_image:
    cache_dir:  cache
    web_dir: %kernel.root_dir%/../www

sonata_doctrine_orm_admin:
    templates:
        form: [ SiteMainBundle:Form:form_admin_fields.html.twig ]

stof_doctrine_extensions:
    orm:
        default:
            sluggable: true
            timestampable: true

lsw_memcache:
    doctrine:
        metadata_cache:
            pool: default
            entity_manager: default          # the name of your entity_manager connection
            document_manager: default        # the name of your document_manager connection
        result_cache:
            pool: default
            entity_manager: [default, read]  # you may specify multiple entity_managers
            prefix: "result_"                # you may specify a prefix for the entries
        query_cache:
            pool: default
            entity_manager: default
    session:
        pool: default
    pools:
        default:
            servers:
                - { host: 127.0.0.1, tcp_port: 11211, weight: 15 }
            options:
                allow_failover: true
                max_failover_attempts: 20
                default_port: 11211
                chunk_size: 32768
                protocol: ascii
                hash_strategy: consistent
                hash_function: crc32
                redundancy: true
                session_redundancy: 2
                compress_threshold: 20000
                lock_timeout: 15